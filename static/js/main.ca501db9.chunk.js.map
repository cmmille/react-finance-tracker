{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseList.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","ExpenseItem","formattedAmount","Intl","NumberFormat","style","currency","format","amount","title","DeleteOutline","onClick","onDelete","id","ExpensesFilter","value","selectedYear","onChange","event","filterValue","target","onFilter","filterOptions","map","option","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","forEach","expense","expenseMonth","getMonth","ExpenseList","sort","a","b","allYears","Set","getFullYear","reverse","useState","filterYear","setFilterYear","filteredExpenses","filter","deleteHandler","key","passedExpenses","parseInt","length","ExpenseForm","formText","setFormText","handleChange","newText","name","prev","onSubmit","preventDefault","onSaveExpenseItem","isFormOpen","type","placeholder","required","min","step","NewExpense","formOpen","setFormOpen","collapsedFormHandler","newExpenseItem","onAddExpense","App","initialExpenses","Date","uid","setExpenses","expenseItem","newExpense","parseFloat","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca501db9.chunk.js","sourcesContent":["import \"./Card.css\"\r\n\r\nfunction Card (props) {\r\n    const classes = \"card \" + props.className\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\nexport default Card","import \"./ExpenseDate.css\"\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.toLocaleString('en-US', {year: 'numeric'});\r\n\r\n    return (\r\n        <div className=\"date-container\">\r\n            <div>{month}</div>\r\n            <div>{year}</div>\r\n            <div>{day}</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport { DeleteOutline } from \"@mui/icons-material\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const currFormatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n  const formattedAmount = currFormatter.format(props.amount);\r\n\r\n  function deleteHandler(){\r\n    props.onDelete(props.id)\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n        <h2>{props.title}</h2>\r\n      <div className=\"expense-item__description\">\r\n        <div className=\"row\">\r\n          <div className=\"expense-item__price\">{formattedAmount}</div>\r\n          <DeleteOutline className=\"delete-icon\" onClick = {deleteHandler}/>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    function changeHandler(event){\r\n        const filterValue = event.target.value\r\n        props.onFilter(filterValue)\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value = {props.selectedYear} onChange={changeHandler}>\r\n          <option value=\"-1\">All years</option>\r\n          {props.filterOptions.map(option => {\r\n            return (\r\n              <option value={option} key = {option}>{option}</option>\r\n            )\r\n          })}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value)\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => {\r\n        return (\r\n          <ChartBar\r\n            key = {dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  let chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  props.expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  });\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\n\r\nimport \"./ExpenseList.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst ExpenseList = (props) => {\r\n  const expenses = props.expenses.sort((a, b) => (a.date < b.date ? 1 : -1));\r\n  const allYears = [\r\n    ...new Set(expenses.map((expense) => expense.date.getFullYear())),\r\n  ]\r\n    .sort()\r\n    .reverse();\r\n  const [filterYear, setFilterYear] = useState(-1);\r\n\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    return expense.date.getFullYear() === filterYear;\r\n  });\r\n\r\n  function filterHandler(filterValue) {\r\n    setFilterYear(parseInt(filterValue));\r\n  }\r\n\r\n  function deleteHandler(key) {\r\n    props.onDelete(key)\r\n  }\r\n\r\n  const passedExpenses = (filterYear === -1 ? expenses : filteredExpenses)\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expense-list\">\r\n        <ExpensesFilter\r\n          onFilter={filterHandler}\r\n          selectedYear={filterYear}\r\n          filterOptions={allYears}\r\n        />\r\n        <ExpensesChart expenses={passedExpenses} />\r\n        {expenses.length <= 0 && <p className=\"placeholder-text\">Add expenses to get started.</p>}\r\n        {passedExpenses.map((expense) => {\r\n          return (\r\n            <ExpenseItem\r\n              id={expense.key}\r\n              key={expense.key}\r\n              title={expense.title}\r\n              date={expense.date}\r\n              amount={expense.amount}\r\n              onDelete = {deleteHandler}\r\n            />\r\n          );\r\n        })}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [formText, setFormText] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const newText = event.target.value;\r\n    const key = event.target.name;\r\n    setFormText((prev) => {\r\n      return { ...prev, [key]: newText };\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onSaveExpenseItem(formText);\r\n    setFormText({\r\n      title: \"\",\r\n      date: \"\",\r\n      amount: \"\",\r\n    });\r\n    props.isFormOpen()\r\n  }\r\n\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              value={formText.title}\r\n              name=\"title\"\r\n              type=\"text\"\r\n              placeholder=\"What did you buy?\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              value={formText.amount}\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              placeholder=\"How much was it?\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              value={formText.date}\r\n              name=\"date\"\r\n              type=\"date\"\r\n              min=\"2000-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button onClick={props.isFormOpen}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [formOpen, setFormOpen] = useState(false);\r\n\r\n  function saveNewExpenseItem(newExpenseItem) {\r\n    props.onAddExpense(newExpenseItem);\r\n  }\r\n\r\n  function collapsedFormHandler() {\r\n    setFormOpen((prev) => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!formOpen && <button onClick={collapsedFormHandler}>Add New Expense</button>}\r\n      {formOpen && <ExpenseForm onSaveExpenseItem={saveNewExpenseItem} isFormOpen={collapsedFormHandler} />}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\r\nimport ExpenseList from \"./components/Expenses/ExpenseList\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport { uid } from \"uid\";\r\n\r\nconst App = () => {\r\n  const initialExpenses = [\r\n    {\r\n      title: \"Groceries\",\r\n      date: new Date(2021, 2, 10),\r\n      amount: 96.28,\r\n      key: uid(),\r\n    },\r\n    { title: \"Amazon\", date: new Date(2022, 1, 28), amount: 120.4, key: uid() },\r\n    {\r\n      title: \"Microsoft\",\r\n      date: new Date(2022, 2, 1),\r\n      amount: 59.99,\r\n      key: uid(),\r\n    },\r\n  ];\r\n  const [expenses, setExpenses] = useState(initialExpenses);\r\n\r\n  function addExpenseHandler(expenseItem) {\r\n    const newExpense = {\r\n      ...expenseItem,\r\n      date: new Date(`${expenseItem.date} `),\r\n      amount: parseFloat(expenseItem.amount),\r\n      key: uid(),\r\n    };\r\n    setExpenses((prevState) => [newExpense, ...prevState]);\r\n  }\r\n\r\n  function deleteExpenseHandler(id) {\r\n    setExpenses(prevState => {\r\n      return prevState.filter(expense => expense.key !== id)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <ExpenseList expenses={expenses} onDelete = {deleteExpenseHandler}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}