{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseList.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","ExpenseItem","title","amount","ExpensesFilter","value","selectedYear","onChange","event","filterValue","target","onFilter","filterOptions","map","option","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","forEach","expense","expenseMonth","getMonth","ExpenseList","sort","a","b","allYears","Set","getFullYear","reverse","useState","filterYear","setFilterYear","filteredExpenses","filter","passedExpenses","parseInt","key","ExpenseForm","formText","setFormText","handleChange","newText","name","prev","onSubmit","preventDefault","onSaveExpenseItem","isFormOpen","type","placeholder","required","min","step","onClick","NewExpense","formOpen","setFormOpen","collapsedFormHandler","newExpenseItem","onAddExpense","App","initialExpenses","Date","uid","setExpenses","expenseItem","newExpense","parseFloat","prevState","ReactDOM","render","document","getElementById"],"mappings":"yZAMeA,MAJf,SAAeC,GACX,IAAMC,EAAU,QAAUD,EAAME,UAChC,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,Y,YCa5BC,MAff,SAAqBJ,GACjB,IAAMK,EAAQL,EAAMM,KAAKC,eAAe,QAAS,CAACF,MAAO,SACnDG,EAAMR,EAAMM,KAAKC,eAAe,QAAS,CAACC,IAAK,YAC/CC,EAAOT,EAAMM,KAAKC,eAAe,QAAS,CAACE,KAAM,YAEvD,OACI,sBAAKP,UAAU,iBAAf,UACI,8BAAMG,IACN,8BAAMI,IACN,8BAAMD,QCMHE,MAbf,SAAqBV,GAEnB,OACE,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaI,KAAQN,EAAMM,OAC3B,sBAAKJ,UAAU,4BAAf,UACE,6BAAKF,EAAMW,QACX,sBAAKT,UAAU,sBAAf,cAAuCF,EAAMY,iBCgBtCC,G,MAvBQ,SAACb,GAMtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQY,MAASd,EAAMe,aAAcC,SATzC,SAAuBC,GACnB,IAAMC,EAAcD,EAAME,OAAOL,MACjCd,EAAMoB,SAASF,IAOf,UACE,wBAAQJ,MAAM,KAAd,uBACCd,EAAMqB,cAAcC,KAAI,SAAAC,GACvB,OACE,wBAAQT,MAAOS,EAAf,SAAuCA,GAATA,gBCG7BC,G,YAnBE,SAACxB,GAChB,IAAIyB,EAAgB,KAMpB,OAJIzB,EAAM0B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO5B,EAAMc,MAAQd,EAAM0B,SAAY,KAAO,KAInE,sBAAKxB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV2B,MAAO,CAAEC,OAAQL,OAGrB,qBAAKvB,UAAU,mBAAf,SAAmCF,EAAM+B,aCMhCC,EApBD,SAAChC,GACX,IAAMiC,EAAkBjC,EAAMkC,WAAWZ,KAAI,SAACa,GAAD,OAAeA,EAAUrB,SAChEsB,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEnC,OACE,qBAAK/B,UAAU,QAAf,SACGF,EAAMkC,WAAWZ,KAAI,SAACa,GACrB,OACE,cAAC,EAAD,CAEErB,MAAOqB,EAAUrB,MACjBY,SAAUU,EACVL,MAAOI,EAAUJ,OAHVI,EAAUJ,aCadO,EAvBO,SAACtC,GACrB,IAAIuC,EAAkB,CACpB,CAAER,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,GACvB,CAAEiB,MAAO,MAAOjB,MAAO,IAQzB,OALAd,EAAMwC,SAASC,SAAQ,SAACC,GACtB,IAAMC,EAAeD,EAAQpC,KAAKsC,WAClCL,EAAgBI,GAAc7B,OAAS4B,EAAQ9B,UAG1C,cAAC,EAAD,CAAOsB,WAAYK,KC4BbM,EA3CK,SAAC7C,GACnB,IAAMwC,EAAWxC,EAAMwC,SAASM,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzC,KAAO0C,EAAE1C,KAAO,GAAK,KACjE2C,EAAW,YACZ,IAAIC,IAAIV,EAASlB,KAAI,SAACoB,GAAD,OAAaA,EAAQpC,KAAK6C,mBAEjDL,OACAM,UACH,EAAoCC,oBAAU,GAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAmBhB,EAASiB,QAAO,SAACf,GACxC,OAAOA,EAAQpC,KAAK6C,gBAAkBG,KAOxC,IAAMI,GAAkC,IAAhBJ,EAAoBd,EAAWgB,EAEvD,OACE,8BACE,eAAC,EAAD,CAAMtD,UAAU,eAAhB,UACE,cAAC,EAAD,CACEkB,SAVR,SAAuBF,GACrBqC,EAAcI,SAASzC,KAUjBH,aAAcuC,EACdjC,cAAe4B,IAEjB,cAAC,EAAD,CAAeT,SAAUkB,IACxBA,EAAepC,KAAI,SAACoB,GACnB,OACE,cAAC,EAAD,CAEE/B,MAAO+B,EAAQ/B,MACfL,KAAMoC,EAAQpC,KACdM,OAAQ8B,EAAQ9B,QAHX8B,EAAQkB,c,eCsCZC,G,MA1EK,SAAC7D,GACnB,MAAgCqD,mBAAS,CACvC1C,MAAO,GACPC,OAAQ,GACRN,KAAM,KAHR,mBAAOwD,EAAP,KAAiBC,EAAjB,KAMA,SAASC,EAAa/C,GACpB,IAAMgD,EAAUhD,EAAME,OAAOL,MACvB8C,EAAM3C,EAAME,OAAO+C,KACzBH,GAAY,SAACI,GACX,OAAO,2BAAKA,GAAZ,kBAAmBP,EAAMK,OAgB3B,OACE,uBAAMG,SAbV,SAAsBnD,GACpBA,EAAMoD,iBACNrE,EAAMsE,kBAAkBR,GACxBC,EAAY,CACVpD,MAAO,GACPL,KAAM,GACNM,OAAQ,KAEVZ,EAAMuE,cAKJ,UACE,sBAAKrE,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEY,MAAOgD,EAASnD,MAChBuD,KAAK,QACLM,KAAK,OACLC,YAAY,oBACZzD,SAAUgD,EACVU,UAAQ,OAGZ,sBAAKxE,UAAU,uBAAf,UACE,2CACA,uBACEY,MAAOgD,EAASlD,OAChBsD,KAAK,SACLM,KAAK,SACLC,YAAY,mBACZE,IAAI,OACJC,KAAK,OACL5D,SAAUgD,EACVU,UAAQ,OAGZ,sBAAKxE,UAAU,uBAAf,UACE,yCACA,uBACEY,MAAOgD,EAASxD,KAChB4D,KAAK,OACLM,KAAK,OACLG,IAAI,aACJtC,IAAI,aACJrB,SAAUgD,EACVU,UAAQ,UAId,sBAAKxE,UAAU,uBAAf,UACE,wBAAQ2E,QAAS7E,EAAMuE,WAAvB,oBACA,wBAAQC,KAAK,SAAb,iCClDKM,EAlBI,SAAC9E,GAClB,MAAgCqD,oBAAS,GAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KAMA,SAASC,IACPD,GAAY,SAACb,GAAD,OAAWA,KAGzB,OACE,sBAAKjE,UAAU,cAAf,WACI6E,GAAY,wBAAQF,QAASI,EAAjB,6BACbF,GAAY,cAAC,EAAD,CAAaT,kBAX9B,SAA4BY,GAC1BlF,EAAMmF,aAAaD,IAUgDX,WAAYU,Q,OC6BpEG,EA1CH,WACV,IAAMC,EAAkB,CACtB,CACE1E,MAAO,eACPL,KAAM,IAAIgF,KAAK,KAAM,EAAG,IACxB1E,OAAQ,MACRgD,IAAK2B,eAEP,CACE5E,MAAO,eACPL,KAAM,IAAIgF,KAAK,KAAM,EAAG,GACxB1E,OAAQ,MACRgD,IAAK2B,eAEP,CAAE5E,MAAO,SAAUL,KAAM,IAAIgF,KAAK,KAAM,EAAG,IAAK1E,OAAQ,MAAOgD,IAAK2B,eACpE,CACE5E,MAAO,YACPL,KAAM,IAAIgF,KAAK,KAAM,EAAG,GACxB1E,OAAQ,MACRgD,IAAK2B,gBAGT,EAAgClC,mBAASgC,GAAzC,mBAAO7C,EAAP,KAAiBgD,EAAjB,KAYA,OACE,gCACE,cAAC,EAAD,CAAYL,aAZhB,SAA2BM,GACzB,IAAMC,EAAU,2BACXD,GADW,IAEdnF,KAAM,IAAIgF,KAAJ,UAAYG,EAAYnF,KAAxB,MACNM,OAAQ+E,WAAWF,EAAY7E,QAC/BgD,IAAK2B,gBAEPC,GAAY,SAACI,GAAD,OAAgBF,GAAhB,mBAA+BE,UAMzC,cAAC,EAAD,CAAapD,SAAUA,QCrC7BqD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aab896f4.chunk.js","sourcesContent":["import \"./Card.css\"\r\n\r\nfunction Card (props) {\r\n    const classes = \"card \" + props.className\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\nexport default Card","import \"./ExpenseDate.css\"\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.toLocaleString('en-US', {year: 'numeric'});\r\n\r\n    return (\r\n        <div className=\"date-container\">\r\n            <div>{month}</div>\r\n            <div>{year}</div>\r\n            <div>{day}</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\"\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date = {props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    function changeHandler(event){\r\n        const filterValue = event.target.value\r\n        props.onFilter(filterValue)\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value = {props.selectedYear} onChange={changeHandler}>\r\n          <option value=\"-1\">All years</option>\r\n          {props.filterOptions.map(option => {\r\n            return (\r\n              <option value={option} key = {option}>{option}</option>\r\n            )\r\n          })}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value)\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => {\r\n        return (\r\n          <ChartBar\r\n            key = {dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  let chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  props.expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  });\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\n\r\nimport \"./ExpenseList.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst ExpenseList = (props) => {\r\n  const expenses = props.expenses.sort((a, b) => (a.date < b.date ? 1 : -1));\r\n  const allYears = [\r\n    ...new Set(expenses.map((expense) => expense.date.getFullYear())),\r\n  ]\r\n    .sort()\r\n    .reverse();\r\n  const [filterYear, setFilterYear] = useState(-1);\r\n\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    return expense.date.getFullYear() === filterYear;\r\n  });\r\n\r\n  function filterHandler(filterValue) {\r\n    setFilterYear(parseInt(filterValue));\r\n  }\r\n\r\n  const passedExpenses = (filterYear === -1 ? expenses : filteredExpenses)\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expense-list\">\r\n        <ExpensesFilter\r\n          onFilter={filterHandler}\r\n          selectedYear={filterYear}\r\n          filterOptions={allYears}\r\n        />\r\n        <ExpensesChart expenses={passedExpenses} />\r\n        {passedExpenses.map((expense) => {\r\n          return (\r\n            <ExpenseItem\r\n              key={expense.key}\r\n              title={expense.title}\r\n              date={expense.date}\r\n              amount={expense.amount}\r\n            />\r\n          );\r\n        })}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [formText, setFormText] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const newText = event.target.value;\r\n    const key = event.target.name;\r\n    setFormText((prev) => {\r\n      return { ...prev, [key]: newText };\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.onSaveExpenseItem(formText);\r\n    setFormText({\r\n      title: \"\",\r\n      date: \"\",\r\n      amount: \"\",\r\n    });\r\n    props.isFormOpen()\r\n  }\r\n\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              value={formText.title}\r\n              name=\"title\"\r\n              type=\"text\"\r\n              placeholder=\"What did you buy?\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              value={formText.amount}\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              placeholder=\"How much was it?\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              value={formText.date}\r\n              name=\"date\"\r\n              type=\"date\"\r\n              min=\"2000-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button onClick={props.isFormOpen}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [formOpen, setFormOpen] = useState(false);\r\n\r\n  function saveNewExpenseItem(newExpenseItem) {\r\n    props.onAddExpense(newExpenseItem);\r\n  }\r\n\r\n  function collapsedFormHandler() {\r\n    setFormOpen((prev) => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!formOpen && <button onClick={collapsedFormHandler}>Add New Expense</button>}\r\n      {formOpen && <ExpenseForm onSaveExpenseItem={saveNewExpenseItem} isFormOpen={collapsedFormHandler} />}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport ExpenseList from \"./components/Expenses/ExpenseList\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { uid } from \"uid\";\n\nconst App = () => {\n  const initialExpenses = [\n    {\n      title: \"King Soopers\",\n      date: new Date(2021, 2, 10),\n      amount: 96.28,\n      key: uid(),\n    },\n    {\n      title: \"Liquor Store\",\n      date: new Date(2019, 2, 8),\n      amount: 19.99,\n      key: uid(),\n    },\n    { title: \"Amazon\", date: new Date(2022, 1, 28), amount: 120.4, key: uid() },\n    {\n      title: \"Microsoft\",\n      date: new Date(2022, 2, 1),\n      amount: 59.99,\n      key: uid(),\n    },\n  ];\n  const [expenses, setExpenses] = useState(initialExpenses);\n\n  function addExpenseHandler(expenseItem) {\n    const newExpense = {\n      ...expenseItem,\n      date: new Date(`${expenseItem.date} `),\n      amount: parseFloat(expenseItem.amount),\n      key: uid(),\n    };\n    setExpenses((prevState) => [newExpense, ...prevState]);\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <ExpenseList expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}